drop table if exists users cascade;
drop table if exists categories cascade;
drop table if exists locations cascade;
drop table if exists events cascade;
drop table if exists participation_requests cascade;

create table if not exists users
(
    user_id    bigint generated by default as identity primary key,
    user_name  varchar not null,
    user_email varchar not null,
    constraint uq_email unique (user_email)
);

create table if not exists categories
(
    category_id    bigint generated by default as identity primary key,
    category_name  varchar not null,
    constraint uq_name unique (category_name)
);

create table if not exists locations
(
    location_id  bigint generated by default as identity primary key,
    location_lat real not null,
    location_lon real not null
);

create table if not exists events
(
    event_id                    bigint generated by default as identity primary key,
    event_initiator_id          bigint not null,
    event_category_id           bigint not null,
    event_location_id           bigint not null,
    event_title                 varchar not null,
    event_annotation            varchar not null,
    event_description           varchar not null,
    event_state                 varchar not null,
    event_date                  timestamp without time zone not null,
    event_create_date           timestamp without time zone not null,
    event_publish_date          timestamp without time zone,
    event_participant_limit     integer default 0,
    event_is_paid               boolean default false,
    event_is_request_moderation boolean default false,
    constraint fk_event_initiator foreign key (event_initiator_id) references users (user_id),
    constraint fk_event_category foreign key (event_category_id) references categories (category_id),
    constraint fk_event_location foreign key (event_location_id) references locations (location_id)
);

create table if not exists participation_requests
(
    participation_request_id           bigint generated by default as identity primary key,
    participation_request_requester_id bigint not null,
    participation_request_event_id     bigint not null,
    participation_request_status       varchar not null,
    participation_request_created_date timestamp without time zone not null,
    constraint fk_participation_request_requester foreign key (participation_request_requester_id) references users (user_id),
    constraint fk_participation_request_event foreign key (participation_request_event_id) references events (event_id),
    constraint uc_unique_requester_event unique (participation_request_requester_id, participation_request_event_id)
);

create table if not exists compilations
(
    compilation_id        bigint generated by default as identity primary key,
    compilation_title     varchar not null,
    compilation_is_pinned boolean not null
);

create table if not exists compilations_events
(
    compilation_id bigint,
    event_id       bigint,
    constraint fk_compilation_id foreign key (compilation_id) references compilations (compilation_id),
    constraint fk_event_id foreign key (event_id) references events (event_id),
    primary key (compilation_id, event_id)
);